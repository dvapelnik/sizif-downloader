#%RAML 0.8

title: Image downloader job implemention
baseUri: http://sizif.sansara.pp.ua/api/{version}
version: v1
traits:
  - authRequired:
      queryParameters:
        access_token:
          description: Access token which idedtifies client
          required: true
          type: string
          example: 55fbb8f535d723065b0aa3c4
      responses:
        401:
          body:
            application/json:
              example: |
                {
                  "code": 401,
                  "errors": [
                    {
                      "access_token": "Invalid value"
                    }
                  ],
                  "status": "ERROR"
                }
  - hasInternalError:
      responses:
        500:
          body:
            application/json:
              example: |
                {
                  "code": 500,
                  "errors": "Internal server error",
                  "status": "ERROR"
                }:
  - jobIdSpecifiedInQuery:
      queryParameters:
        job_id:
          description: Job id which identifies requested job
          required: true
          type: string
          example: 55fbdf0f4e73fb15759823c5
  - hasAccessForbidded:
      responses:
        403:
          body:
            application/json:
              example: |
                {
                  "code": 403,
                  "errors": "Access forbidden",
                  "status": "ERROR"
                }

/handshake:
  is: [ hasInternalError ]
  post:
    description: |
      "Create new client and retrieve access token for using service"
    responses:
      201:
        body:
          applocation/json:
            example: |
              {
                "access_token": "55f9d36dc793ccc60b93e5a5",
                "code": 201,
                "message": "Client created",
                "status": "OK"
              }
/job:
  is: [ authRequired, hasInternalError, jobIdSpecifiedInQuery, hasAccessForbidded ]
  get:
    description: |
      "Retrieve full job info with files"
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "code": 200,
                "data": {
                  "job": {
                    "created": "2015-09-18T09:53:19.165Z",
                    "files": [
                      {
                        "content_type": "image/jpeg",
                        "downloaded": "2015-09-18T09:53:23.388Z",
                        "height": 160,
                        "path": {
                            "original": "http://example.com/image009.jpg"
                        },
                        "width": 240
                      },
                      {
                        "content_type": "image/jpeg",
                        "downloaded": "2015-09-18T09:53:23.461Z",
                        "height": 160,
                        "path": {
                            "original": "http://example.com/image008.jpg"
                        },
                        "width": 240
                      }
                    ],
                    "id": "55fbdf0f4e73fb15759823c5",
                    "status": "complete",
                    "url": "http://pmg17.vn.ua/"
                  }
                },
                  "status": "OK"
              }
      400:
        body:
          application/json:
            example: |
              {
                "code": 400,
                "errors": [
                  {
                    "job_id": "Invalid value"
                  }
                ],
                "status": "ERROR"
              }
  /make:
    is: [ authRequired, hasInternalError ]
    post:
      description: |
        "Make job for downloading images by page url"
      body:
        application/json:
          schema: |
            {
              "url": "http://google.com"
            }
      responses:
        201:
          body:
            application/json:
              example: |
                {
                  "data": {
                    "created": "2015-09-16T21:12:46.597Z",
                    "id": "55f9db4ef0a3574412661f15",
                    "status": "created",
                    "url": "http://google.com"
                  },
                  "message": "Job created",
                  "status": "OK"
                }
        400:
          body:
            application/json:
              example: |
                {
                  "code": 400,
                  "errors": [
                    {
                      "url": "Url is invalid"
                    }
                  ],
                  "status": "ERROR"
                }
  /status:
    is: [ authRequired, hasInternalError, jobIdSpecifiedInQuery, hasAccessForbidded ]
    get:
      description: |
        "Retrieve job dounloading status"
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "code": 200,
                  "data":
                    {
                      "created": "2015-09-17T12:49:12.822Z",
                      "id": "55fab6c82f70e71602187285",
                      "status": "created",
                      "url": "http://google.com"
                    },
                    "status": "OK"
                }
        404:
          body:
            application/json:
              example: |
                {
                  "code": 404,
                  "errors": "Job not found",
                  "status": "ERROR"
                }
